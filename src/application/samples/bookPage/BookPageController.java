package application.samples.bookPage;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;

import java.net.URL;
import java.util.ResourceBundle;
import java.util.StringJoiner;

import application.misc.AlertHelper;
import data.Book;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.TextArea;
import process.factory.BookFactory;

/**
 * Controller for displaying a book informations's window.
 * <p>
 * To display this, you need to load the FXML resource, and then call
 * {@link BookPageController#initData(Book)} in order to make it work.
 * 
 * @author Aldric Vitali Silvestre
 * @see BookPageController#initData(Book)
 */
public class BookPageController implements Initializable {
	/* =======Page components======= */
	@FXML
	private Button modifyDescriptionButton;
	@FXML
	private TextArea descriptionTextArea;
	@FXML
	private Button modifyKeywordsButton;
	@FXML
	private TextArea keywordsTextArea;
	@FXML
	private Label titleLabel;
	@FXML
	private Button modifyTitleButton;
	@FXML
	private Label authorLabel;
	@FXML
	private Button modifyAuthorButton;
	@FXML
	private Label categoryLabel;
	@FXML
	private Button modifyCategoryButton;
	@FXML
	private Button saveModificationsButton;
	@FXML
	private Button deleteBookButton;
	@FXML
	private Label borrowLabel;
	@FXML
	private Button modifyBorrowButton;

	/* =======Attributes======= */
	private Book originalBook;
	
	private Book modifiedBook;

	/* =======Initialization======= */
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub

	}

	/**
	 * Init all needed data in window from a specified book.
	 * <p>
	 * This method needs to be called before showing th stage.
	 * 
	 * @param book the book we want to display data
	 */
	public void initData(Book book) {
		//we want to have a copy of the original book
		this.originalBook = book;
		//but also a copy of this book for modifications
		modifiedBook = BookFactory.createBookCopy(originalBook);
		/* now fill all fields */
		titleLabel.setText(book.getTitle());
		authorLabel.setText(book.getAuthor());
		categoryLabel.setText(book.getCategory().getValue());
		descriptionTextArea.setText(book.getDescription());
		// for keywords, add them together and separate them with ;
		String keywords[] = book.getKeywords();
		StringJoiner joiner = new StringJoiner(";");
		for (int i = 0; i < keywords.length; i++) {
			joiner.add(keywords[i]);
		}
		keywordsTextArea.setText(joiner.toString());

	}

	/* =======Listeners methods======= */

	// Event Listener on Button[#modifyDescriptionButton].onAction
	@FXML
	public void modifyDescription(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#modifyKeywordsButton].onAction
	@FXML
	public void modifyKeywords(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#modifyTitleButton].onAction
	@FXML
	public void modifyTitle(ActionEvent event) {
		String newTitle = AlertHelper.showTextInputDialog("Modifier le titre",
				"Choisissez un nouveau titre pour le livre", "Titre", titleLabel.getText());
		titleLabel.setText(newTitle);
		modifiedBook.setTitle(newTitle);
		System.out.println(originalBook);
		System.out.println(modifiedBook);
	}

	// Event Listener on Button[#modifyAuthorButton].onAction
	@FXML
	public void modifyAuthor(ActionEvent event) {
		String newAuthor = AlertHelper.showTextInputDialog("Modifier l'auteur",
				"Choisissez un nouvel auteur pour le livre", "Auteur", authorLabel.getText());
		authorLabel.setText(newAuthor);
		//don't forget to modify the book also
		modifiedBook.setAuthor(newAuthor);
		System.out.println(originalBook);
		System.out.println(modifiedBook);
	}

	// Event Listener on Button[#modifyCategoryButton].onAction
	@FXML
	public void modifyCategory(ActionEvent event) {
		
	}

	// Event Listener on Button[#saveModificationsButton].onAction
	@FXML
	public void saveModifications(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#deleteBookButton].onAction
	@FXML
	public void deleteBook(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#modifyBorrowButton].onAction
	@FXML
	public void modifyBorrow(ActionEvent event) {
		// TODO Autogenerated
	}

}
